version: 2.1
jobs:
  checkout_code:
    docker:
      - image: circleci/ruby:2.7.1-node-browsers
      - image: circleci/node:13.7.0
    working_directory: ~/chat_app
    steps:
      - checkout
      - save_cache:
          key: v2-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/chat_app
  test_back:
    docker:
      - image: circleci/ruby:2.7.1-node-browsers
        environment:
          RAILS_ENV: test
          MYSQL_HOST: 127.0.01
          MYSQL_PORT: 3306
      - image: circleci/node:13.7.0
      - image: circleci/mysql:8.0.16
        command: mysqld --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_HOST: 127.0.0.1
          MYSQL_DATABASE: chat_test
          MYSQL_USER: root
          MYSQL_ROOT_PASSWORD: password
    working_directory: ~/chat_app/back

    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-rails-bundle-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v2-rails-bundle-
      - run:
          name: updater bundler
          command: |
            gem update --system
            gem install bundler
      - run:
          name: bundle install dependencies
          command: |
            bundle check --path=vendor/bundle || bundle install --jobs 4 --retry 3 --path=vendor/bundle
      - run:
          name: bundle update
          command: bundle update
      - save_cache:
          paths:
            - vendor/bundle
          key: v2-rails-bundle-{{ checksum "Gemfile.lock" }}
      # Database setup
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 3m
      - run: rm ./config/database.yml
      - run: mv ./config/database.yml.ci ./config/database.yml
      - run:
          name: Prepare db
          command: |
            bundle exec rails db:migrate --trace
      # run tests!
      - run:
          name: Run rspec
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"
            bundle exec rspec \
              --format progress \
              --out /tmp/test-results/rspec.xml \
              --format documentation \
              $TEST_FILES
      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
workflows:
  version: 2.1
  test:
    jobs:
      - checkout_code
      - test_back:
          requires:
            - checkout_code
