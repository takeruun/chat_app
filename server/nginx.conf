proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

upstream nextjs_upstream {
  server front:3000;
}
upstream rails_upstream {
  server back:8000;
}

server {
  listen 443 ssl;
  server_name localhost;

  ssl_certificate     /etc/nginx/ssl/localhost.pem; #SSL証明書
  ssl_certificate_key /etc/nginx/ssl/localhost-key.pem; #秘密鍵
  #ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
  #ssl_ciphers         HIGH:!aNULL:!MD5;

  access_log /var/log/nginx/access.log;
  error_log  /var/log/nginx/error.log;

  #root /app/public;

  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection 'upgrade';
  proxy_set_header Host $host;
  proxy_cache_bypass $http_upgrade;

  sendfile off;
  #proxy_cache_b;
  
  location / {
      proxy_pass http://nextjs_upstream;
      # CORS start
      add_header Access-Control-Allow-Origin null;
      add_header Access-Control-Allow-Methods "POST, GET, OPTIONS";
      add_header Access-Control-Allow-Headers "Origin, Authorization, Accept";
      add_header Access-Control-Allow-Credentials true;
      # CORS end
  }

  location /api {
    proxy_pass http://rails_upstream;
    # CORS start
    add_header Access-Control-Allow-Origin null;
    add_header Access-Control-Allow-Methods "POST, GET, OPTIONS";
    add_header Access-Control-Allow-Headers "Origin, Authorization, Accept";
    add_header Access-Control-Allow-Credentials true;
    # CORS end
  }

  location /api/cable {
    proxy_pass http://rails_upstream;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_cache_bypass $http_upgrade;
    proxy_set_header Host $host;
  }
}